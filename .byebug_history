exit
continue
exit
next
board
next
board
next
board
guess
continue
next
continue
next
continue
array
board
next
board
guess
continue
exit
continue
exit
continue
next
continue
exit
continue
next
continue
next
continue
next
continue
next
exit
continue
exit
continue
next
exit
board
(!board.incorrect_letters.include?(guess) && guess.length == 1 && guess.to_i.to_s != guess)
!board.incorrect_letters.include?(guess) && guess.length == 1 && guess.to_i.to_s != guess
exit
continue
next
@image.hangman_image == hanged_men.last
next
@image.hangman_image.map{|x| puts x}
@image.map{|x| puts x}
@image
@word_array
@board
next
hanged_men[6].map {|x| puts x}
hanged_men[6]
@num
next
continue
@image.hangman_image
hanged_men.last
hangeD_men.last
@image
continue
e
continue
w
continue
i
continue
p
continue
hanged_men.last
@image
exit
continueexit
continue
@num
continue
@num
continue
image
self
continue
@num
continue
self
continue
board
continue
@num
continue
@num
continue
image
continue
@num
self
@num
self
@num
continue
@num
continue
@num
continue
@num
continue
board
continue
previous
self
self.hangman_image
self.hangman_image == hanged_men[4]
self.hangman_image == hanged_men[5]
(0..6).find_index {|i| self.hangman_image == hanged_men[i]}
(0..6).find_index {|i| self.hangman_image == hanged_men[i]
hanged_men.length  - 1
@num
continue
hanged_men
self
@num
continue
board.incorrect_letters
board.letters
continue
@num
continue
image
continue
@num
continue
@num
continue
board
continue
@num
continue
@num
continue
@num
continue
image.update_hangman_image
image
board
continue
@num
continue
board
continue
self.hangman_image
self.hangman_imae
self
@num
continue
board
continue
next
image
next
image
self
next
@num
next
board
exit
continue
@num
exit
continue
@num
continue
@num
continue
@num
continue
@num
continue
@num
continue
self.hangman_image
continue
@num
continue
@num
continue
@num
continue
next
nex
self.hangman_image
next
@num
next
self
hanged_men.length
exit
continue
contineu
continue
exit
continue
board
next
@guess_letter
next
image
array
board
exit
continue
exit
continue
exit
continue
exit
continue
exit
continue
next
@guess_letter
exit
continue
exit
continueexit
continue
valid_guess?(guess, board)
valid_guess?("g", board)
continue
contineu
guess.to_i.to_s != guess
guess.length == 1
!board.incorrect_letters.include?(guess)
continue
guess.to_i.to_s
guess.length
guess
continue
board
guess
continue
exit
guess
continue
@guess_letter
exit
continue
exit
continue
board
guess
continue
